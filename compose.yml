services:
    api:
        build:
            context: .
            target: development
            dockerfile: apps/api/Dockerfile
        environment:
            - NODE_ENV=development
            - DATABASE_FILE_PATH=${DATABASE_FILE_PATH}
            - MSSQL_SERVER=${MSSQL_SERVER}
            - MSSQL_USER=${MSSQL_USER}
            - MSSQL_PASSWORD=${MSSQL_PASSWORD}
            - MSSQL_DATABASE=${MSSQL_DATABASE}
            - MSSQL_PORT=${MSSQL_PORT}
        volumes:
            - ./apps/api:/app/apps/api
            - ./packages:/app/packages
            - ./data:/app/data
            - api_node_modules:/app/apps/api/node_modules
        working_dir: /app/apps/api
        command: bun run dev
    app:
        build:
            context: .
            target: development
            dockerfile: apps/app/Dockerfile
        environment:
            - NODE_ENV=development
            - VITE_HMR_HOST=0.0.0.0
            - VITE_HMR_PORT=8080
        volumes:
            - ./apps/app:/app/apps/app
            - ./packages:/app/packages
            - app_node_modules:/app/apps/app/node_modules
        working_dir: /app/apps/app
        command: bun run dev

    proxy:
        restart: "on-failure"
        container_name: "proxy"
        build:
            context: ./provision/nginx
            dockerfile: Dockerfile
        ports:
            - 8084:80
        develop:
            watch:
                - action: sync+restart
                  path: ./provision/nginx/nginx.dev.conf
                  target: /etc/nginx/nginx.conf
volumes:
    sqlite-data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ./data/db
    api_node_modules:
    app_node_modules:
